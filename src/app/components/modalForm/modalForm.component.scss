.modal-form {
  display: block;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0, 0, 0);
  background-color: rgba(0, 0, 0, 0.6);
  padding: 0.2rem;

  .modal-content {
    background-color: var(--colors-white);
    margin: 15% auto;
    border: 1px solid #888;
    border-radius: 0.5rem;
    width: 100%;
    max-width: 600px;
    .modal-header,
    .modal-body {
      border-bottom: 1px solid rgba(136, 136, 136, 0.603);
    }
    .modal-footer {
      text-align: center;
      height: 100px;
    }
    .modal-header,
    .modal-body,
    .modal-footer {
      padding: 10px 20px;
    }
    .modal-header {
      display: flex;
      justify-content: space-between;

      h3 {
        font-weight: 600;
        font-size: 1.3rem;
      }
    }
    .modal-body {
      .field {
        display: flex;
        flex-flow: column-reverse;
        margin-bottom: 0.5rem;
      }

      label,
      input {
        transition: all 0.2s;
        touch-action: manipulation;
      }

      input {
        font-size: 1.3em;
        border: 0;
        border-bottom: 2px solid var(--input-font-focus);
        font-family: inherit;
        -webkit-appearance: none;
        border-radius: 0;
        padding: 0;
        cursor: text;
        color: var(--input-font-focus);
        &:focus {
          outline: 0;
          border-bottom: 2px solid var(--input-font-focus);
          &::-webkit-input-placeholder {
            opacity: 1;
          }
        }
        &:placeholder-shown + label {
          cursor: text;
          max-width: 66.66%;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          transform-origin: left bottom;
          transform: translate(0, 1.5rem) scale(1.2);
        }
        &:invalid {
          border-bottom: 2px solid var(--danger);
        }
      }

      label {
        letter-spacing: 0.05em;
        color: #9d9d9d;
      }

      ::-webkit-input-placeholder {
        opacity: 0;
        transition: inherit;
      }

      input:not(:placeholder-shown) + label,
      input:focus + label {
        transform: translate(0, 0) scale(1);
      }
      .error {
        color: var(--danger);
        visibility: hidden;
      }
    }
  }
}
